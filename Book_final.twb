<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0212.2230                                -->
  <repository-location id='Book_final' path='/workbooks' revision='1.0' />
  <preferences>
  </preferences>
  <datasources>
    <datasource inline='true' name='Sheet1 (Ducey Sample) Extract' version='8.3'>
      <connection class='dataengine' dbname='C:\Users\Shiqi Zhang\Desktop\Spring 2015\MIS 688-Master Project\Tableau\TWEETS (TWITTER_DB.TWEETS) _v1.tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <family>TWEETS</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1150</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>2147483647</statistic>
              <statistic aggregation='Max' datatype='integer'>2147483647</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>16</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>1</ordinal>
            <family>TWEETS</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>16</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>2</ordinal>
            <family>TWEETS</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCORE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SCORE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SCORE</remote-alias>
            <ordinal>4</ordinal>
            <family>TWEETS</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>591</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-0.94469000000000003</statistic>
              <statistic aggregation='Max' datatype='real'>0.94534300000000004</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCREEN_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SCREEN_NAME]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SCREEN_NAME</remote-alias>
            <ordinal>5</ordinal>
            <family>TWEETS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>672</approx-count>
            <scale>1</scale>
            <width>8000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;12News&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;zwee&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SENTIMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SENTIMENT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SENTIMENT</remote-alias>
            <ordinal>6</ordinal>
            <family>TWEETS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>8000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;negative&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;positive&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEXT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TEXT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TEXT</remote-alias>
            <ordinal>7</ordinal>
            <family>TWEETS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1147</approx-count>
            <scale>1</scale>
            <width>8000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;ARIZONA: GOP Gov. Doug Ducey Revokes Ban On Adoption By Gay Couples\&quot; ...\#TheStruggleContinues http://t.co/bSGyiw92b6&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;“If the economy’s growing, we’ll have more dollars in which to make decisions on.” \#ducey&#10;Read more: http://t.co/Uwiqe8gf05&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>8</ordinal>
            <family>TWEETS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1077</approx-count>
            <scale>1</scale>
            <width>8000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Fri Apr 10 00:14:14 +0000 2015&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wed Apr 29 23:31:11 +0000 2015&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>_ID</remote-alias>
            <ordinal>9</ordinal>
            <family>TWEETS</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6892</approx-count>
            <scale>1</scale>
            <width>24</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;55283E74A016C41368947181&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;55440361A016C4123428D16B&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>96</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='temp_ymd' datatype='string' name='[Calculation_1620412123719940]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='MID([TIME],5,7)+MID([TIME],27,30)' scope-isolation='false' />
      </column>
      <column aggregation='Count' caption='ymd' datatype='datetime' name='[Calculation_3610408122126425]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([TIME],5,7)+MID([TIME],27,30) )' scope-isolation='false' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_5720501192241825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Avg' datatype='integer' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='integer' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[SENTIMENT]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' datatype-customized='true' name='[TIME]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[SENTIMENT]' derivation='None' name='[none:SENTIMENT:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Shiqi Zhang\Desktop\Spring 2015\MIS 688-Master Project\Tableau\Sheet1 (Ducey Sample) Extract.tde' schema='Extract' tablename='Extract' update-time='05/03/2015 05:44:46 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1620412123719940]' formula='MID([TIME],5,7)+MID([TIME],27,30)' />
            <calculation column='[Calculation_3610408122126425]' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([TIME],5,7)+MID([TIME],27,30) )' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6892' timestamp-start='2015-05-03 05:44:46.431' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>0</ordinal>
              <family>TWEETS</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1150</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2147483647</statistic>
                <statistic aggregation='Max' datatype='integer'>2147483647</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>16</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>1</ordinal>
              <family>TWEETS</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>16</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>2</ordinal>
              <family>TWEETS</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCORE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SCORE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCORE</remote-alias>
              <ordinal>4</ordinal>
              <family>TWEETS</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>591</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-0.94469000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>0.94534300000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCREEN_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SCREEN_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCREEN_NAME</remote-alias>
              <ordinal>5</ordinal>
              <family>TWEETS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>672</approx-count>
              <scale>1</scale>
              <width>8000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12News&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zwee&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SENTIMENT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SENTIMENT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SENTIMENT</remote-alias>
              <ordinal>6</ordinal>
              <family>TWEETS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>8000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;negative&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;positive&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TEXT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TEXT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TEXT</remote-alias>
              <ordinal>7</ordinal>
              <family>TWEETS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1147</approx-count>
              <scale>1</scale>
              <width>8000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;ARIZONA: GOP Gov. Doug Ducey Revokes Ban On Adoption By Gay Couples\&quot; ...\#TheStruggleContinues http://t.co/bSGyiw92b6&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;“If the economy’s growing, we’ll have more dollars in which to make decisions on.” \#ducey&#10;Read more: http://t.co/Uwiqe8gf05&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TIME</remote-alias>
              <ordinal>8</ordinal>
              <family>TWEETS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1077</approx-count>
              <scale>1</scale>
              <width>8000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fri Apr 10 00:14:14 +0000 2015&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wed Apr 29 23:31:11 +0000 2015&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>_ID</remote-alias>
              <ordinal>9</ordinal>
              <family>TWEETS</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6892</approx-count>
              <scale>1</scale>
              <width>24</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;55283E74A016C41368947181&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;55440361A016C4123428D16B&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>96</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1620412123719940</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1620412123719940]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1620412123719940</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <scale>1</scale>
              <width>16000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Apr 06 2015&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;May 01 2015&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>64000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3610408122126425</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_3610408122126425]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3610408122126425</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-04-06 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-05-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SENTIMENT:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Excel format latest twitter extract)' inline='true' name='excel-direct.42126.842453194447' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='C:\Users\Shiqi Zhang\Desktop\Spring 2015\MIS 688-Master Project\Tableau\Excel format latest twitter extract.xlsx'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='_ID' ordinal='0' />
            <column datatype='integer' name='ID' ordinal='1' />
            <column datatype='string' name='Screen Name' ordinal='2' />
            <column datatype='string' name='Sentiment' ordinal='3' />
            <column datatype='string' name='Text' ordinal='4' />
            <column datatype='string' name='Time' ordinal='5' />
            <column datatype='real' name='longitude' ordinal='6' />
            <column datatype='real' name='latitude' ordinal='7' />
            <column datatype='integer' name='Number of Records' ordinal='8' />
            <column datatype='real' name='Score' ordinal='9' />
            <column datatype='real' name='Longitude_' ordinal='10' />
            <column datatype='real' name='Latitude_' ordinal='11' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[_ID]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Screen Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Screen Name]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Screen Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sentiment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sentiment]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Sentiment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Text]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Text</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude_]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Longitude_</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude_]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Latitude_</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Count' caption='ymd' datatype='datetime' name='[Calculation_3610408122126425]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([Time],5,7)+MID([Time],27,30) )' scope-isolation='false' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_5720501192241825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude_]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' name='[Longitude_]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
      </column>
      <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <group name='[Exclusions (Latitude,Longitude,Sentiment)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
          <groupfilter function='level-members' level='[none:Sentiment:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Shiqi Zhang\Desktop\Spring 2015\MIS 688-Master Project\Tableau\Sheet1 (Excel format latest twitter extract).tde' schema='Extract' tablename='Extract' update-time='05/03/2015 05:44:20 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3610408122126425]' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([Time],5,7)+MID([Time],27,30) )' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6892' timestamp-start='2015-05-03 05:44:20.071' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1150</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2147483647</statistic>
                <statistic aggregation='Max' datatype='integer'>2147483647</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude_</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-111.01000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>35.198</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude_</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-112.31699999999999</statistic>
                <statistic aggregation='Max' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>591</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-0.94469000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>0.94534300000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Screen Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Screen Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Screen Name</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>672</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_Flamingtayo&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zwee&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sentiment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sentiment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sentiment</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;negative&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;positive&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Text</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1147</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.@DougDucey - 150k stand to lose healthcare insurance? I&apos;m just a cross-that-bridge-when-it-happens kind of guy.  http://t.c&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yo. Gov. Doug do you still love your boy Joe? http://t.co/rP0QTfE25q&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1077</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fri Apr 10 00:14:14 +0000 2015&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wed Apr 29 23:31:11 +0000 2015&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>_ID</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6892</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;55283E74A016C41368947181&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;55440361A016C4123428D16B&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>35.197823280000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-112.31664268</statistic>
                <statistic aggregation='Max' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3610408122126425</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_3610408122126425]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3610408122126425</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>26</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-04-06 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-05-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='SENTIMENT' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Day-to-Day Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column aggregation='Count' caption='ymd' datatype='datetime' name='[Calculation_3610408122126425]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([Time],5,7)+MID([Time],27,30) )' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3610408122126425]' derivation='MDY' name='[md:Calculation_3610408122126425:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3610408122126425]' derivation='Day-Trunc' name='[tdy:Calculation_3610408122126425:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[md:Calculation_3610408122126425:ok]'>
            <groupfilter function='level-members' level='[md:Calculation_3610408122126425:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter from='&quot;negative&quot;' function='range' level='[none:Sentiment:nk]' to='&quot;positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[md:Calculation_3610408122126425:ok]</column>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
              <text column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.72464090585708618' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42126.842453194447].[cnt:Sentiment:qk]</rows>
        <cols>[excel-direct.42126.842453194447].[tdy:Calculation_3610408122126425:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Geographical'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column aggregation='Avg' datatype='real' name='[Latitude_]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' datatype='real' name='[Longitude_]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude_]' derivation='None' name='[none:Latitude_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude_]' derivation='None' name='[none:Longitude_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[Exclusions (Latitude,Longitude,Sentiment)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
                <groupfilter function='level-members' level='[none:Sentiment:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='%null%' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:longitude:qk]' member='%null%' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;negative&quot;' />
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;neutral&quot;' />
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;positive&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='0.0' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:longitude:qk]' member='0.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;negative&quot;' />
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;neutral&quot;' />
                      <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;positive&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter from='&quot;negative&quot;' function='range' level='[none:Sentiment:nk]' to='&quot;positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[Exclusions (Latitude,Longitude,Sentiment)]</column>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42126.842453194447].[none:Longitude_:qk]' field-type='quantitative' max='-12251047.042524055' min='-12576491.770953462' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.42126.842453194447].[none:Latitude_:qk]' field-type='quantitative' max='4232018.9446221506' min='3731493.1914049177' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
              <size column='[excel-direct.42126.842453194447].[cnt:Sentiment:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42126.842453194447].[none:Latitude_:qk]</rows>
        <cols>[excel-direct.42126.842453194447].[none:Longitude_:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Individual Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column aggregation='Count' caption='ymd' datatype='datetime' name='[Calculation_3610408122126425]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPARSE(&quot;MMM dd yyyy&quot; ,MID([Time],5,7)+MID([Time],27,30) )' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3610408122126425]' derivation='Day-Trunc' name='[tdy:Calculation_3610408122126425:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter from='&quot;negative&quot;' function='range' level='[none:Sentiment:nk]' to='&quot;positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
              <text column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42126.842453194447].[cnt:Sentiment:qk]</rows>
        <cols>[excel-direct.42126.842453194447].[tdy:Calculation_3610408122126425:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Sentiment]' derivation='Count' name='[cnt:Sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter from='&quot;negative&quot;' function='range' level='[none:Sentiment:nk]' to='&quot;positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='356' />
            <format attr='width' value='346' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
              <size column='[excel-direct.42126.842453194447].[cnt:Sentiment:qk]' />
              <text column='[excel-direct.42126.842453194447].[none:Sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Negative'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column caption='Index' datatype='integer' name='[Calculation_5720501192241825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Text]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Text]' derivation='None' name='[none:Text:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5720501192241825]' derivation='User' name='[usr:Calculation_5720501192241825:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;negative&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.42126.842453194447].[none:Text:nk]' direction='ASC' using='[excel-direct.42126.842453194447].[avg:Score:qk]'>
          </sort>
          <filter class='quantitative' column='[excel-direct.42126.842453194447].[usr:Calculation_5720501192241825:qk]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[usr:Calculation_5720501192241825:qk]</column>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[excel-direct.42126.842453194447].[avg:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42126.842453194447].[none:Text:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Positive'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel format latest twitter extract)' name='excel-direct.42126.842453194447' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42126.842453194447'>
            <column caption='Index' datatype='integer' name='[Calculation_5720501192241825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Sentiment]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Text]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment]' derivation='None' name='[none:Sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Text]' derivation='None' name='[none:Text:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5720501192241825]' derivation='User' name='[usr:Calculation_5720501192241825:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42126.842453194447].[none:Sentiment:nk]'>
            <groupfilter function='member' level='[none:Sentiment:nk]' member='&quot;positive&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.42126.842453194447].[none:Text:nk]' direction='DESC' using='[excel-direct.42126.842453194447].[avg:Score:qk]'>
          </sort>
          <filter class='quantitative' column='[excel-direct.42126.842453194447].[usr:Calculation_5720501192241825:qk]' included-values='in-range'>
            <min>1</min>
            <max>15</max>
          </filter>
          <slices>
            <column>[excel-direct.42126.842453194447].[usr:Calculation_5720501192241825:qk]</column>
            <column>[excel-direct.42126.842453194447].[none:Sentiment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[excel-direct.42126.842453194447].[avg:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42126.842453194447].[none:Text:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='54000' id='1' name='Overall Pie Chart' show-title='true' w='38300' x='0' y='0'>
              </zone>
              <zone h='50000' id='8' name='Day-to-Day Trend' show-title='true' w='45700' x='38300' y='0'>
              </zone>
              <zone h='50000' id='11' name='Individual Trends' show-title='true' w='45700' x='38300' y='50000'>
              </zone>
              <zone h='46000' id='12' name='Geographical' show-title='true' w='38300' x='0' y='54000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone fixed-size='376' h='48500' id='15' is-fixed='true' name='Top 10 Positive' show-title='true' w='16000' x='84000' y='0'>
              </zone>
              <zone fixed-size='385' h='49125' id='16' is-fixed='true' name='Top 10 Negative' show-title='true' w='16000' x='84000' y='48500'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Overall Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42126.842453194447].[none:Sentiment:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42126.842453194447].[cnt:Sentiment:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42126.842453194447].[none:Sentiment:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Day-to-Day Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42126.842453194447].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42126.842453194447].[md:Calculation_3610408122126425:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sheet1 (Ducey Sample) Extract].[md:Calculation_3610408122126425:ok]</field>
          <field>[Sheet1 (Ducey Sample) Extract].[none:Calculation_1620412123719940:nk]</field>
          <field>[Sheet1 (Ducey Sample) Extract].[none:Calculation_3610408122126425:nk]</field>
          <field>[Sheet1 (Ducey Sample) Extract].[yr:TIME:ok]</field>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Individual Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42126.842453194447].[none:Sentiment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[Sheet1 (Ducey Sample) Extract].[none:Calculation_1620412123719940:nk]</field>
          <field>[Sheet1 (Ducey Sample) Extract].[none:Calculation_3610408122126425:nk]</field>
          <field>[Sheet1 (Ducey Sample) Extract].[yr:TIME:ok]</field>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Geographical'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='14' param='[excel-direct.42126.842453194447].[none:Sentiment:nk]' type='color' />
            <card pane-specification-id='14' param='[excel-direct.42126.842453194447].[cnt:Sentiment:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Top 10 Negative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sheet1 (Ducey Sample) Extract].[none:SENTIMENT:nk]</field>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Top 10 Positive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Sheet1 (Ducey Sample) Extract].[none:SENTIMENT:nk]</field>
          <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <active id='1' />
      <zones>
        <zone name='Day-to-Day Trend'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Individual Trends'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Geographical'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42126.842453194447].[none:Sentiment:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Overall Pie Chart' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Day-to-Day Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Individual Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nNS9a4wlSXYe9kW+7qveVV39mu6Z2ZnhcHdJUSYgy7IJizApAZJsQKJFA6QN
      GzYFw/4h04JfP21AECjAtCGAMigbsCD5j23BL1EiQQgQIJkQKJi2qBV3Ze7OzE5PTz+mu6vr
      XXVvPsM/8p68J889EZm3qnqGPoOeqsqMjDgR5x1xIsI8evTIDodDBEGALMtQFAVGoxHKsoS1
      FhLomTFGfac9p2dafQBQVhWKssBwMMTR0SG2t7ZhjEFVVWr5Ljx4GWstgiBwvvd93weojcpa
      FFVZ4wQgCiOEQdC0YYxpyhLecjz4OF0XLxeuq9CnrEoUZblSG0EQIA4jb3scny+DPsAyn1Dd
      URiFCMIQgyTBcDjEkydPsLm5iTAMURQFyrJsEPRVZucMEJgAxhgE8zKuDvDO1wxUIUkSnF8k
      mEwmsNai7Bh8DZ+uQZXliDn7QFVVLWZeqhMWBqaWALtg8i4FQIIeBEGrbm2c+TeBQ8C0Pllr
      UVUVwjB0Cp4sX1YlEmsB/t5a6L2oIQwChEG4hDMfg6+KPgScLlFW5LAGCIxBHMd48OABPvnk
      E7z99tuI4xgAUJblEhEl05W2QppnMMZgGA9ggqAhrCxrhHAYYxCHMcIgRBLFCIJgyQLxQdPq
      4EDlePuyXNfAEoPxQdUYuaW1MccJBha2+VYOvMSb8OWEIYbV+mmMaX3Dx4QzDh873g4HV1lj
      TMPIPstE5SWz+mj0VdFHraOW9ApZkaMoClRVhffeew/Pnj3DxcUF4jhGGIZNJdIaUIe4uxIE
      pkFQ65jWQarv/Pwc0+kUYRg6NZnLjeDEIFw1HPqCRnDpyvDnXUTr0mga01Bb2rec+Pxvsgwc
      N4mr752LRi73SdKReIELpeznm6aPdJ9d9AkM6od5WWCWZ0izFHlR4MGDB0jTFEdHR4jjWNW+
      5PtmRY40z5pneVG0OiqR1qCqKlhrsb+/j+l0utRJTXt2DbA2YD7T6BowKWQa0aXwAXASl/pK
      5WVfeD+pjr4a3dVfLkh9v9Gey/eSJlKAXO3dNH3kOPKx8dEnglkgkxc58iIH0hk2xmvY3t7G
      5eUlDg4OsLe3B2NM45cT88+ytPZ9552OwwhxGC1pMm7OpeSWZYmszGGCAGVVIYqi1gC6fGKt
      c11MoX3X5xvNVZCEpmfctPu+0/qkaTV6zr+R46n1gwuVJkAui+5qW7arvec/NSHncYsPVqUP
      b5e+70MfZ83TdIayqjCZTBCGIc7OzhBFURNE1T4vUNm2NqtsHTy5tLNmhoqqRGUt0jzDYDjA
      q4MDWGsRRZHTdPEO+bSQq+0ul6WLAHKwC2b1uurUmE3i5WJajclc40M/eQzH32tWzCV8hBO5
      phxvX/tURjLk7xX6BEAduSdRjCiMEEdxPY1lgCKv44Lt7W2cnJwgz/NGCMg0czNvjEFZlcD8
      OffDuBRKRqAZo6KsY5C333kbz58/X9Ikrk5yHHxmVHM9tO+4ptAEjZenZ9xqSUJyfF2mW7Yr
      v+OaWn7D+yXHxhjTxHC++qS7x/vXx6VxAaeRhj+HVekjcbwKfaIoiJDESV3QViirCgZAEiYN
      E5dliQcPHuCzzz7D/v4+hsMhgNp1GSUDpFmG0rKIHssmnje6pGlYmSAIcPj6sHG56LkM+CSD
      SI0gp8Sobume+ICsncu0a9ZH9tunCWVdsrwEKqNNm2rty/KuPmtaNs0zVLZCM6dblySs2e/z
      GcQw8tKH95cH6dehj3SnrkKfqLRlE8Cyt6zTQJ7nsNbi4cOHODg4wPn5Ofb29uqXZS1dZZ4h
      DAIM4qQ1fcYR1My1tRahCerhtIuO8cU4lxmk77VOagLi+o6IQhqIBravX9xFKDkGPnegq68A
      WgxE30gFIdt2CYnUoI3QzN1ZtGb92xp48dQgFji6xsDl+nxV9Imof76CxpjGj9zb28Pl5SWe
      Pn2K+/fvN52i1T9fxzRtSL+PktqqREGI8WiEFy9etKyALxCSDKEJHW9X80n5T60e2QeNebQ6
      +DNtIsBVv49hZTtdzCW/1d4TaEGuhp98lhY5sxVsitwEqNcGzRL9AbQmTOj5l0mfSDYQGDNf
      zV0wHL2nQIIC4+fPn+PevXuwtg4yNDdH889cGgmomXk6nWJ3d7eXv+kbHG2QtPJcs8i6fYMu
      Z1BcTCv/1trSymr98TG5jyGkkEjtCszHARa28rtiGlRWT1uprHs131qLKFiOT/jPBq8V6EMK
      sQ99AnphrW18udqN0VcNy7JEnucYDAaYTCY4OjpCFEVNkMHr4w1rdcl3hHiSJEiSBHmeL6VD
      yLo14MzSx7xqA+nyySUTaVrNB74xcQGfTOjTd4mTyzpInIwx9ZpOkTkZuk8f+4ILr+vSR6vH
      hXsQBAGG8QCjZIgoiGBMgIoxWVEWKMqylXtSVRWKosD6+jpmaYrTs1PEcdykTlBjLvcDQDMz
      IREGgNevXwNAMw3KVxblQPmYQ/VtxUyDFpPw2MM18JyxtDo0cCmCLqHmmo8LtPxW4sLHp8ua
      LX7vFpjrCAHvZ6AoqC+bPlFgAhRVgbKqmuB+lAwAmHpuvsgBa2FMAGMAOy9jbT1Pv7u3i4OD
      AxRFgd2d3ZY7RIhIN0j+LOdJdETou3fvIssyDIdDFEXhZY4+hJIMREIlhZPwvM7yvA/4rAXv
      U1dbMqfKpTXpHU9DIYbhU6H0nsprbmoXuFzYVb6H4kp+2fQJSMPXrdQ/qqqeDg2MqV0hM0/u
      srb2EecDlec5ZumsDlaDAJ8/+bxxhySTU4e0gSurCrM8a6ZcB4MBTk5OEAQBkiRpDQLVKTW9
      i6Fc2tWXgst/rgrSWkk8XSCtGQeX7+4076YdAPLFS6A9aSDp0wV9++ODph27qOerok8rCCZI
      ixxAHaF3tVPn/cywtraGJEnw6aNHeOfttwGg5b9r2qvFqLCY5WlDsLW1NTx+/Bj3799Hnuct
      00iDQ6naXLBk8MQ1CnVcZlJq+GjQpbF97ofWdym0vnpdvj21Rb+nedbsSwDQ5KcS0FT1qn3n
      cFXm074n3L8q+gT8Y9mxvCycwRCHoiwxS2dIkgS7u7t49vw5wjBcWoHsAgtgmqdI0xRRFCFJ
      kiWk+b8+eSxAWxBdWaa98FtR+92UqZam38cYkl71TP7iv6oL72ui2yemAdo4f5X06Zdl5AFC
      lIRgOBoiSWKcnp4iDMPW7BAhppm7wCyYeZZnDYPned4IEmcAOUia28NjAPoHLM+qrNpXOZ+v
      uSWa1tbqW0VIfHGQdCs8tSzhLBrxfs3b0oJq7TlQr+9EgWDu+Y+bpo/cv+KjTzMNelXglZMQ
      bG1voygKnJ2d1Smn0WKLnBYDxGGEUTJAGNS+almVmKa1W/Xo0aNm0Oh77g65CCKDcJmXVFWV
      d8ulBpqLJduVY3kTFqCvK2CM6aHBu2ar+uHr65cmCHlZIC8LZ/mbpA9XVBIP6UYuWYAuYXBp
      NWokLwqkaYqdnR2UZYkXL140QqDNNrTN5WLgirKAhcXW1larfsmELm0mhUEbFJdrxevS3mm7
      sWS7Xf5oF7g0tDb2S2U9JKxshWmWYpanmM1/TrMU02yGaTaD7TYhvRWmK2YhKKsKF+kUs/lO
      QuDLpU9jAeTLvp3TkAyDEKGpXZeNzQ1M1tfw8ccfNzM6GlLWLvb/tv1Z26wJ8EGRWp8HwbwO
      l4l25c3QNy4Ca9pdw0X+fhVw4cGfa/UnUYJBnGAQJWp6CoAmFqjop61Y7k8/3G4CmjEi702h
      jzbmN0mfQHshK9VmK7hLwhuO5kGMtRazNEUyGODtd9/B9z76HowxSyvGABZuEsOfiDEaj1W8
      eB18itUHhHdRFMiyzGnNXJak78aMmwJtAVCOv4TAGERhiDAImjTzLwukglpVUBqm7Eh2u0n6
      qC6Qj5GkMCwhbxbTjnlRYDqdwsLi4dtv49mzZwCAOI6XrEdZls0CG/+XDJLWwlrXIPhwttYi
      y7IW8/NBW9Xn7AOakpDPXe+11XKtDi4M3J82pk5Mv06Mp7XZBVEYIVplBtAuu4xNkPqG6dMK
      grv8zdrF0ROSLOrMv8AEKMoC02yGylZ1QDubIQgCbGxu4vj4GACWZofqji7790Ve4PT0VJXu
      VVZI6aSJLKtTv2mmgA88tSFnZq7jzvhcLV+dXW4cMYd8z/1fosdNg0tojTE4Kl7jr/zuf4u/
      9Pef4CLvJwQUd0ghkPsG3gR9WusAvEIOvIEkSpoDnwhoisvaeltjWuSAMY1LU1UVprMZRqMR
      hsMhDg8PYe3ylkfZhbKqsLmxcaWOSfxJo0ZRVB/epFihm/JtOfjcLFeOk1YWWA7g5Oo6twiV
      raeTy54rvKuAFvsBQBQG+Eu//Rfx649/HX/jHz3DL/ydTxEGehwiYZqnSOfT37ItaudN0Gcp
      CJaSRY0TAkVZLA4+shZJGNXbIO3idDSNoJWtkGYpxuMx1tfX8fz584YRG3dkrrFCE6AqShRZ
      jiAIcHx83KRiu/Dtct0IRqMRxuNxMyvFmcvHrH3q7+Ozai7kVX1lWT9fJ6m3l5bXXthygSaU
      ka3wX//ub+LfevUBYAM8PpqiWlpmcI8hxX2aa+ijD/+mD84cGgHoQwRrLXKWO2QB5FVZuz9B
      nSzXqotF9/SPUqnv3r2Ljz76CMaYZnYoCkMMohhVUQKVhZ1rL55bxPGV2sHXB+krA/o8sfZd
      X+2juZJkul0zGrwPlIPF9yK7NCKAlkugwpcQBHP8CgT47g//efzlg38VcRjgX/vRuwjMPJdf
      sfCyHhk39KXPKnlMckzN9x99asN4sWGYd6plDVAzaDbPE6rdoIX/FpoApa0WO3/E1BYAJFGM
      JIpbTP3o0SO8++67AND451mWNZvvAeDwsN4j7Foh9AmAZEatb1pZF/Rtw+W7a+/TPJsrlXo0
      m+CV6pz/NYwHrfSPsiyXYimCqqqQFnmvVJYu8I2L7GcUxvjsMEMUGtzfjOr1nNaYW2hmycDM
      s5D1ervw6PudHH+vBZAS0wpITIBhnGAY10iXtFHbsNVIhi+vv6oqZFm9+PHgwQO8ePECZVk2
      lmA0GiGKIjx58gSvXr1q8ook01O9Pu3vey+1QRehV3VViEl7uWcGALcIvJ4mE7cNvulCYwyG
      cQK/3l0NWvGaYzyKMsf9TYPba/UpH/y7eS1q3dqU7ZdBn6VsUKePhdr9IQmipe0mwDQBKrAT
      kkkQ7KJeSYw8zxHHMXZ2dnB8fIzt7e1GCD799FPs7+9jMBggiiI1BuCd93XSVVYL9ukAWaCd
      N78qkJaRx8bIdvvGLhKI4NKaSGsYh2G9X/dLcIeuA1HY9kLk78BiJo/T56ozQA195EMNfAJC
      f5fzA7JcgbSrvqIoEMcx1tfXcXBw0ExPvvXWW0jTFCcnJwCW54DlWUA+/DloZ8/IeqXfv0r9
      VI5/I3/3CaUX9/m0Mo8RqN6iLFGUBfKiwGU6w2Vapzbk7CS/vsG8hC9DeMha+Ohjrb1x+gR9
      PpHRuEvqvG6I8r6cb7XM87xJpX78+DGsrfcFB0GAtbU172xJF0E5rhx3GkDf4ooMXPu6WTyz
      Ub73xVk+MKberzvLs2bfBP92lqdIixx5VbRSny2Wt0r2AU2A3ySUtmo8ilXo4/ubP3fRJ2jc
      dYXB5aBpiVJ9zTldGMHb4kxCac/vvvsuvvvd7zb7jmlbpI941xEQbb+tzEzkdfUFaleuZPad
      UVoV5NqMC67qMgD+sbwJIXFZZAk3Sh/+0CdBAJbOdlkFpObTkKEDuL7+9a/j29/+NuI4RlmW
      zttqfDi72uVahZhdElaeLAz0P5lBCpBWrxSCKAyRhFE9SxYuDhboAl73MB7Md/CtTh9XEN3n
      u5u2ED76kIK6Sfo49wPIzknzzYnYNdOi/a2VJyGoqgoffPABgMUOIV+n+giBtnuMPyeQu65k
      32SmovTF5bf0DR8ziW8YhM2ZrFEYds7bWIvmCHrelyTqLzzy20Xd3e6kj4bXAc36vgn6tNJF
      eGNUCMBSDon0WVfxXWUHtPe8HOXskEVYpT0faK4Xf9dl3rkWku8kXAdfqtGpYQ2QlXmLYZrz
      Qk0/V6gXHh313LT2L22FWZHBvGH6cOW91JIxBqEJMEoGzsvOZCO+xvg3mlS6YDQaYTKZLEm6
      q01eH+0m0tpxBVZUvzbDIi0e/0bGEBI3abI1vDm+84f6oMg6sKwRkyhuhOCqzNnlEnXR5Fpg
      LUpP2stN02dpGtTaei5/lqcoqtLbSd74sqaem3tqHO5VWGkFyBU6PT0FoOfFu/ChevhMggRt
      NoZ+dw2iNnj0UzIwb5ubW9c4tmaNDJamGrqYjOMSBrXyGifD+txNWn3pKQuuWE1zJ27aAgBA
      BWDGTqZ70/SJ5AcEXVmEvnfW2nleT7KoW/EfpUDIuGIymSy1JX14/rskSJerI+v1aWoXuAig
      4SoJqG7kuQI/aRaZxwTWzg8auErlCu5aWzclCM3aqajuTdEnkoX7VuyDwJjWbIYMnn1miZ7J
      08xcddHvmhVxrRRqgWqXsGuaiJteTah8jKHh1Se2WLyf/4+1IRlk1fipy4WVf0v302VxrwRG
      p6sLt6vSR10JvpY023rPADUg/UV+CYLWFjHueDzG06dPUVUVBoMBjDH1VUriAoUuBnMJWN8+
      urSrr36tb33dt8p2Z0DW79tKUhsPjl+f7ZF9mdcXA9yUW5TmmfMUCYnLdejjTHS5qiQnUVzv
      RxWJWjJY8fnnxOQffPABnj59ijRNYYKgGRRNu8tB0IJgzdXiuLm+1wa4CziT9GEIC4tplrYu
      K/ESsFb+S5qO/y2f9wFNafWFm9L+xtQ7DCXvcLgp+izl0vqIZa1tLoFuEGXmdxDFrVvCpbsi
      CeRrkxLl7t27h4vLC0zi+UnRdnk1lYRGMpvL/dHalCayiwlWYS7eb1c9dfC74pTvvDrX1DIf
      53pae3EC2026Kzfm9giwaO+acyUWXoc+nfvVaACjIFwsStW7mGuXxrSR0rQrR1j6dS4/1drF
      qcavX7/GaL6Lq8jzxo2SAsXb0FKFNWFwZXxKH9dlrSTOGvP56miNG1MuXUD5Ptr4anVH84sN
      AQvYeguiCzdr7Zyu6H1UCm/7pgSiTvCrhTYKIww8x8Rr7Uqe0+jjDIIJojBEHMZNHk/NeIvf
      +6QL88CXuy+uNuk5pSbv7e7h1ctXuLV/CzO7PCNAsQX97qpTEwaXEMrdSJrVoecaIVxayakc
      VmUaU+/7xXyqOjT6BnQ+VvMRggkMBjap3UlV4AwGcb2ecJFOV3KfbsL/5/URVFWFrMwbq2et
      RRxGzvNnpULgdOL0UU+HhgXCMEAcRi0ND7TNrSu9wMcsEgENeH1lWWJ9fR0mMHj9+jV2d3dh
      bDv3Qy5suSwRCV7XLJTsJ69D65e0Rj5LyP/mZedPXUOyBAZoducFQYBxol84wu8koPfWWsRR
      vZe7VLXoAo9hnLRObnPBTWv/pfphF8f4z4Frbx/f+egTYP7CwMxPd6jP6RxE9W2PXdqUa8rW
      aiZDQvPb+gLdGbA2WUMcRnj18iVg2seqUBtd9br25rr6p/WRv5fZnRIHLfCn51p9Fu12u4AT
      NS+LZlceb4PwlL/XFbjrnmUp8vkBCH12lfUZ/5uGvCyQ5pl6m2hf+pjHnz+20dzcBfPTxDRp
      og8IXD4nB+6r+4BcKcko3EenPcKHh4cwYYD1tXXked4c/KQRwNUH6dbI9rX+cpBxh09JSIFz
      /V0HwqbR7PyM/y7gge4oGbTw4mO5FJMEBlVZ7x12xR6UDpP9HttVxvsVh1HrGMhV6BNYYL7R
      IsU0neJ8dolZnqL0aHNpZvg/zkT8mOpVOsbbJVckz3PkeY7t7W0cvj5EZSsUVdEQpo/fL591
      uWFSc8i6fPcTaDkrsuzSOHbg5ALCrz74dtZsrOfv6PeWQFS2mdhwQVbkS5mnPpA+903GBC7I
      ixxpniET9133oU99BYypl83Jp8yLAoUpEQYhhvFiUYtXJhmEoKXRsKxxpXZqiOewFNIaAICd
      53ZEUYQszZoOcRz49xruvKxL+2vWQnNltDol0/mYTL6LgrBxh8qqW4m08ACQlzkMYid9XGPh
      w41yubpwuYqbuyos4WHM/EQSfXZI/s7pExhTX5lDx5Xwl2VVtpKS5OKTpnk166D97WLYrjqq
      qsLDhw9xdnrWilF4OS40vjlyqRFlOVmW491lPXz96vKXw7BWPNEVNuRLP9/Vr6v67F+WVr8K
      WNSxS1pkyIp8fuVrvoRviz/CoJ7tyZWCQL0kzbVY4296zIt0iXjDLi2v7aHVyllb7xc+Pz8H
      ACRxexMIZVa6vudC3LXfVLMkst99Ygb+TgalLqiqqjkpoQuWca0PG9AmJeR3q4BmIa8Dq37f
      x3UtbX24WFGV9b/56SV5UbvL8pykZoTDMMQ4pBta6g3KAQyiIFIZ14dMH0bgB59y8LkMxiyS
      5KbTKaytfdiyWBx0K10vXo9s02U1XP3QhFnz6TUzrAX5rrFp/lZLzduCAaHKM3fJt5+lKQzq
      2bLRaORs7ypCcBXGl+P7ZVkRY0xrQqGoSkRB2GTKNvcDhEHY/IvDCONkiNFgiJgdS+gKqKQ2
      IE3pcoGkn6j5jV1M8uGHP4CPP/4YgIE1y+W7jiPUcNMGz/WPW4I+xNRcJ1ebjUW09WJPFCwv
      9gyiGINocTBZqz6z+N1lCXgfoiBAGAQrH6LV5QZqgfBVLcdNCkxZlfMjPov2SrCUUq6NXczE
      f2p1aUEo/2YV/5q+z/McURTh3Xfexfn5OUajIS4uLppvR6PRklvF69BMuSuVWPbXNQa8bk2z
      yjFwWVBZRxLVhwfTocPG1Dv2zHzK2tr63E0r2rIGqBPm6tmhqmxPWkTs7uAojBAbs3TF6ipg
      bX33Ar/XmegpT/XT+vtlQj1RUCAwBoGmvTlySx8r1sAn5bJu7v+6tLNPY1AdZVliNBwiy9Lm
      NDnOyPKeKI6LZi3UgfK4QC7LwHGUyoOed8VP2vMkrM9VHUQJhsmgdfGFZiGiKMJgMMBwOGzO
      C8rKHFmZI5/vJ16imzoKy6ApNGstPvn4+zg+rg8yK4oCs9kMWZYhTTNkWQ5rF+e/1sdjLu5/
      ns1mretSfe3eFFTWInJpZ6mNfcfQSSnmRJTlJWPKvCBNI1BOEBGMM3tZlAjYbFBRFAjDsDn/
      XwMKROW1nJp7wmMLX7wgx0GzahSz8JSM1hEditDSc5+baESmJzAPBm0FVBrjtGejFrS/uptx
      dnaG/f1bOD46xng8wvc/+RSbm5sYDBJU1uLVy1e4fec20jRthGA0HOH84hxbW1uwVYWT01N8
      7WvvOl3DNwFNDCD9ee7Da/4y1yBy1sVlUfjfkqnomdYWDyBl0tvOzk59+/lggDiOEYZh6yAt
      Fy68Tq2PXNC6xkPWKYNdaS0lHjKe8FleXj+NR1f84oLr+NWSjq9fH2I6m+FyOkWW5dja2sJ4
      MkIYhsjSDA/ffog8r59Tu/u3byGKYpRFgTTNUOSFE6c3FTRHfMClIHQFbBJBqTVd0EdYfFqA
      fpZliadPn+LOnTvY2tpCWZa4uLhAmqad9XRZMsnAmnaXIC2Jaw2C91tTBFwzy/Fx0WcVsLZC
      VuRNfNHgawKU8B+nruFTVRXGozHu3L2N6XSK46MTJIMEURjh4vISl9NLwABra2s4fH2IyWSC
      au7uDAbJXMEYDAYDV7NvDMyTJ08sBY1LL3sMsCSgpuE1V2GVdjSXwxiDOI5RFAWOj48xS2e4
      d/ce4jhGmqbONAzui/usj8wgXHVMtHLN2T2OKVEZM0jgMQRvo5pPW9PZmn2Bjk/nriDfJ+Dq
      m4aXr7xL4dG3ffjhTQXLAdduJM28UV9w62Jwgi4TzMFl+l1AZ4cGQYC9vT3cu3sPh4eHKMsS
      w+Fw5ZkHn6smv+X4amOifUd1coJzi6G5YPI7uYDG3bNBvJh96Q+CPgbzm1z8m/kluFw2bax8
      Vt5l+d4ktC7Jkz6lzxeV32m+e5dg+DSDVl4CnSxNQdX6+jpOT0/x7NkzjMdjDIdDNb6hOvlP
      iUOXv++KMfoIgIsJ+DtelhSTxOm6TGJE+3U26bDJ/3J+J8auy8Lz/rjq08bEFxPdFCwJQF8/
      XEP0qsA1Q59AUH5XliWKokCSJNjY2MBkMsHnTz5HkiSYTCatXUM8ftDcG61tzRJSedeYkcZ2
      1eVjCE1gZf034RLM8gyX6ay1EZ/aCEwwP1SrO4h+E0yqjeubaKe1I0wzU5qvyr8hBlzF3dHq
      ke6AC1w+M1DPMYdhWAdZVYWnT59iMBhgd3cXFxcXqi9PLgSBFhtQeTkWvG2Ji8bkpMm17FNf
      X+VpyBpOVwHaAyDzY4wxGA+GTXuzPF3aG+xSHhp0uZs+uM63fWDpcFxuXrXfAX0h6aomWdOI
      PknXjrjjDFUUBYqiwNraGvb29jCbzwhNJpPWbZMa80hLJJ/zqVCu/bSA2yXItA7gGw8CmiKV
      eHI3la8l1MerRwhv8IDcGqc+ZfSZrJtkWEmrm+ijM9+WzwxISXedoqBpzr5+nCZovB4C2sDh
      EkaySHle722YjMd4dfAKeVEgjOebqDtMq8v8Unt8DIwxDVP73Db6jhb1XMTsihMkjvzbJIoR
      R3HvLNIFAl0x2DKemuWR8dWbBF8c5OtL651VLsjQNKIvT8blB7oCJK0j/Hetbtd7yYiyD9Za
      TCYTfPH8C1RlifPzc5zPLpHPN/4QQ7rwkX12Eb0rgOdlNXdG+7d0YjR0qyLrBNBci3ST4KI5
      x+1NgmucuRJoaATdWgSm3j5JC96DONHPBbpux1bxS3kgC+gpy5qr0oVbFEUIggAnJycYjUYw
      xmCYDBDkBmme10Jg6jNMQ2Xmy6V1XeATHPL7eRm5aMaZ23Uuqqy3C6fe3/asw2eZ3ySs0ldj
      DGABA9PsEw7mF4HRnRdJFKOaC0QELOfjcKnqo8E5kbWtjX2YS1s1veogh/NDoD32e9MAACAA
      SURBVE5PT3FxcYEHDx407YdBiPFg+QgR30G6fBx8C2QufDWtL316esetGg+6pXtISkNNhegx
      bG2auPc2aH/7LPOXYXl8uNUPsDSVK+kYzn82s0CuAfD528CCIfjCk2yMPyei0fM+rlIfAaK6
      6FLtly9fIooi3L17t7lnTNbVx71wta35wn2thmsWSNbTNTZyz0WD0xWS2niMsqwADbhUufC5
      Seb3KZereBgu/BoBkMwttQ8vxwdcVspnJbRyMrNR+uAuLdoV9IRh2JwVdH5+DmstdnZ2mg0h
      rjp9bWpaV46FPIJRaso+Y9YHOHNynDX6+EDDCexvLpyVtZjNT5noA3361rf/vC+r9E9+37WF
      1XlJnqYNXULB3SDZqGYuOfTZOdYKcMxyBmQURfUJEVmGTz75BACwt7fXBJKuAaK6fRbFJfwE
      XadZ8DGQda4Csm05Rj5cfLgBy0ent8Z9ZUyvBz7LehU3y0V/qiuSjUnQCM8R4i4Nr5wHs30R
      1rQnsBwYc0Gg9OfLy0scHBzg/fffb4Sx6HmejdYHaZ244Gv7mbUx5BaEuxjUp77QFY/x+q2t
      d3hRwFfZCkVZLp3o3eXzW1sfydIXv5sAKZjXURxd9CFaLJ0NKhsH3OdkAmjNVlAcUFnbBBlU
      v7Qg/J0Ezd3h3wZBgHh+GsT5+TkuLy8xHA7x8OHDznuFeX2cQTUG4GshmpXqYkrNXZEBsTb2
      sh7+U1okqrOFG9DctBgiqNOcq+XUDwKiIa87L4uVt0feZAyg1btK/V30AWq+jgA0HQ3nB+Fm
      RV6n1s4LhUGISJzBQyDdoiAIGuaXjbs0JIDWVKHm83HGieMYx8fHyLIMRVHg7t27jUT3YX6q
      26dVNG3hEgKf6+E6QdsVN/jwdQlIVz1RGDY3yfu2f3YJYxf08e997/swbT9E2vX56NNsiMmK
      +pzNKIwWG7CDAJW1KIscOQrAAOFcIEJxarSMDfgzYHk6izNTlx8NLNwUEpKiKLC/v998T3cK
      9/UXXXj6Yp++7gMHn4VwPZeHukp8NHcU8G9blePCn8sYa1Xml7HadRj4RqyI6b+WFRljmrP/
      LRbWwOXDl1XtUxoAo2ToPNBKCoM29QlgaWbDhaxc8c3z+kzQ6XSqujHS7dJAI7bmGmkE5ppd
      q4cWs3ya28XgfeInTbHwOjVtqgmwtLDNe7VVP7wpF+gq0Ic+QRBQKoSe9urVJsagcFxipmkZ
      QkpC3zUBwoX8Vcr1ce2J9eHvwtPVNi/P4xBfedeGHKkYXPhquBuzvCdaE/5VXCteTnM9+4Kv
      X18F9KEPAARFVSIrrnaHbDm/r4vnrMgdZV1EoDJ9zvAhZn/06BF2dnaW3KoukFpPO0NTujsc
      6HnXqdeaK8gZ2zcDxL/lrgnHu4tBXXXI+lzfXgV+L2l/dPAdH4OgKEtUwidfoZ0lzS21uHSD
      XFpLgqaVwjDE5eUloijC2tpa6xyZPlpPugMuRuLrB9r7rpVc19/0rMsK8HZlOcLN5xq53FAX
      ffjYrTI9K9vl9bms35cFfekTGSwPWl9BCAN9EYsPaJdp7tMWXZBxeXmJi4sL3L17F9ba1oyP
      i6ASXMERJ6ArXtH8aq3fXeAbY+mj+06W0HDQ6tLGW6NRG/+rBcK87esGxFeH/vQJVlnmln/H
      YaR2nIN2UYT2N/9eEocOwz0/P8fOzg6MMc2sD+9gH7w5uBiG3skV7b671nz4uHCU4yEFWhN0
      X30anrwNeueiz/+vwXSPP70PDPpr5JY7M58G5f4/Jx7/XZpdOehUj2yff3dwcIDt7e1m5VcL
      ml2E5/i7NCL/zjUGXQfidn3fDLoSuLusY5dl5vsGSEgl0/Ox5cluco2iLRRqF3pDH0G9LviE
      tS99lhw+0/xbzAsZmPoMGdYpl/tD7zXtQ8/5aWi8PO+QJOxbb72Fjz76qNVOH+gS7lUI1OVe
      XQX6BrayfcC9Qi1BvtcuOuF1h2HYHI9CfNDwg0Uv78hl1a8Dq1jDvvRpcoHiMGrOTNe0Tl3G
      NtcoFVWJoCgQiY0bPLjkGl8iJJ8Z095cz9+RphoMBo0AaecX9fGrZYziGjTpLrjec+bpE0Bq
      9fL2tfwj+t0Vg0h6dQmpXGeg7yrUF2TD2iVeINzKskRa5r2OUpenVl8HVlEUWnkXfZondCme
      RZ1ApQWAoWnPrWZl3ryX+fYcES2Qa9wJNgFLG1mkdiKCkeuj+f6uy96orJy65PVrbgu3VlIR
      8O/laW8+8MUs3D2SKdYEmtKQ9fB+ar6+z/X6h5/+GuzFwZKVbuEWrpDE17tkRz09rK4cq770
      abZEVrbCZTZrVZCEESIW6NZ5QUHrRhLa5E0LP9Kcasi1CWlaV51KJqG66KQHAEv3wmqamT83
      xjSxg+ukBWklJC4us+tiVlmf7JPLOmoan3/XBZLQ/CRq2R/JUP/81/44DJZ39bXp2olCjW/P
      S/VWAVecxN/JspI+RVnU0/6o70jQb4qfQ0YXJTNGGkQJpnnauE1yYOl48i63oXkPv2YkoKt+
      XIyp+cPS3YiiaIkBeRlq35VTI4VOC9x9gq/hK8HnlnW5WC7tzvHmlnpJQK1pNtS7+hQY07qP
      oLJWXUR9UzsJuqyAMQawy+Nb3whTX/q44KHEfSwKVSjTHYKAjs8bLF1ODEA9hU3W6frbpeGI
      0eheMB+TdIFkeIKu1GcqIwMxXx9cwZlk6pvUkrJtaUl4QqHPJZI/uSsxTAbNv9hxBIumQK7T
      j673LYGFre9GmENlLfKyaJ2WYUx9c06nQ8fdkCaYMGYp+HVpO8kwvkHhWlmacWJQV5KZT/Pz
      OmWs4vKReR2tvostnT6G1vpDv9N3XenbmnulvZdtuFyDrjZWps/Ny25n+33KlUyRpUXmVEZe
      AagZvS3hXCCkuyD/caRdBNGYyNXpzc3NpTp5aoBsS8sGlElqvC8+4PhLnK1tX32q+dqa+8dx
      1MB12FYf4PTh7Urc+axTnudNkiHvN8UQ/NmioSuh58U7CsKlWaY+/MF/r+ZZzUVZulNHrNXP
      BSJEBmzun55xU6htJdTq4Uzj64ymwfjzk5MTBEGA8Xjc2h/Ay7ncLu4KtIM6/+KYrIcf/dLn
      G1nGtfFHgz7TqnKciEYy0OfnLtH7LMuaFXU+tWytbXbcafTnfQ+CAJFdTIBU83t6Xf3qiveM
      qXejJVFcu99XdqMMyqpcOvhXNDbfD2CEWYdpFrqk5pJmUNOgvC6pAenbLo3L2yVG2NzcxMXF
      BcbjsZpuLInlY0p5pg5vz+U/u+qV1oHXx8u43BRX/31Cqo0T/Wy2ps4ZsaqqJn5KkgRZli31
      i1uCLM+R5Xlzwpox9c2bWZahqqrmJhdyh/lNM9bWQXFVWaRF1tlHOYb0e95cc2VhgCZhsy9Y
      2PqWeE8ZA4MoierbB7sGGFj439KdkCkCPs3oM+k0gFx7kTY6Pj6GtfVRJ9rsi4Y3J7I8nY27
      AHxPLNeevB4uMH3cEk1IZN/6fN+nHMeVA7U1m82ad3SXgpcOwZyRq4XA0unaxhjMZjPEcYw4
      XjD+8ri6DyRwjWFrXFi3ozCan05tUTjWm2SfuPL1QQC0c1zop9SInNG5NSDT2YcpJZIS5KFM
      vL7ZbIbpdIooinrt+5XTs5qm532XOEor5mJ+rmm7hEPW2Rc0N0d+74rF6OSMVcCWFVDps3XW
      1hMJaZouxQstS9lxPqkWj8g6aEE2LwuU8226oQmWroWVVrL3+BrleHTtQ00b8QHRNCsHKSDS
      pSAobYVifs8VlaPvwjDEaDRq6usDHCe+wuzyvXk5rR45yPy9VB4uAvjGSbpI2ne+vrrokyQJ
      xuMxBoMBiqjAFyefYD3K8CvP/jf89W89wctZ0CvekLjOZrPmLuCLiwtcXl42gXvfI+Bd7zW3
      r7IWFeaXhmN5nOS4ewUQ9SEQS0GwZjo031r6j13SzpF1DXZ9QFP7Ijj6JooijMfj3syv4e57
      5gLeX2OWL6mTMVFf16WrvT64uPojhYgrqQQJ7q2vY+PX/wOkxRP8L6/u4Fd/5xJ/7V//Jsam
      e2xJSVBQbQOLtMwardzg2HN6aEnQ6Tl7J/vch9f8zG8wiBO+J7g/cHeIm1lfACi/5X45h8AE
      dRYi6zDlB11eXmIwGLS+6ZomlCfD+bSFC0cCYn7NgvHZk5VMsAD61rcbTeuLhr90g+jZIBhg
      MLyHv/M0we7BD8HmMV6cZfjuy2kv5pmFM7w4/qS5iPykPMbFq3+M0WiE0WikuoramDrHH4uZ
      VWkBuqBPWcpsptPwIs1k+CrymUrXtGjLjDEmImKTj+rS1tZajEYjvH79utkQI8v7mJmvCtaj
      a+vptfkPWMDOf9KRGgYGMEAULIJ+TfO7xsw1hl0nw0mrIn17X93yez4OaZo29SXJAP/l6Ofx
      6espAGCShHi4PYC1JaI4wqv0BMNwiPVw0Fo4nM1mGA1GmGzsII5jJEmCtWANeHiv1V6aZ0uz
      NjS8/G843MCuPrr67QNr60zX4VzzN989ffrU0rSWK1D0Vcp/d/nFmtnWLIbWXhzHODs7Q5qm
      DfNTVqgLJ84EsyxFUZVeYdHiAqqn1hb9DKXPdenzjRb8a2X7+rncBbq8vGyN+as0wF/+Pz/H
      eVbi3/xn7+G+OUaSJBhMBnj26u9jEq5hMv4RnJ6eIs9z7GxvYXNzEwevj3B+foYPP/xQTaum
      +4q7cPKBKz7q6q+vzcDM74cQtFw6G1QLUF0IccbuKiPb0RhS+tODwQB5nuPi4gJ37twBgNZ5
      n9KyAG7N2tclkeWsXUwLUpuuIM1Xp+y3hg8voykM7Ttf4h6vczwew9o6qzbLMkxfPMIv/In3
      AQCPHz/G7u3b+M7Fd/C3vve3cPrqD2A/fB9/+usBkiDAvXv3cP/b/w3++u/M8PKH/1389Id7
      TRt8LC4uLmDCAGaFlOmrxkqrQGACDBNdkUVAOz3AF4RJ8Gl1QF9I8tXBf6fMzbOzM+zt7cGY
      9j5g2a5cqndpSU3Y/Rq6XQePgfi3fdzGrskCjo8r0HWNlw/I1aTFMAC4ffs20vkFgru7u/it
      s9/CX/hHfwGFLTA6egf/4IsX+I2PD/FX/vQHmEzGqD7/Lfw/+b+CF5+d4Gd/32aTNrGkMKoK
      FhZJnNRTlx6cvgyw1jqZH2BHIxK4Fmo0d4YnkGlM1tfcaXVHUYTj42MAtRuUZe2EJmttI7h9
      29OsG7Xr/qb+KU8ak3Xwv2UwLDU7L+9SIvRM7tvV4hD5LW/DNf2cJAmSJEEYhihR4q/+47+K
      wrZdl4OLHH/jnxzi4c4Uv/n6Z/H9fBPvJCGieIgsSx0DBqC0KFEgiOeXB7LXXxbjc6C8Io0+
      S9OgspCPyHLFVBKz6wAooB208VRdADg9PcXDhw8bt0cOHu1+kklvXECruUZqBkPx9304UgmX
      hdH6sYq7pQXP0qK5rJaPPrx/NBZEryiKUJkKv/hPfxHf/vhr+MMPfgSHs8Pmuzv4p3iNr6NE
      iL/30SEOLjLsRbcwiCr85qfH+LXvHuFPfmMbMAbZPLiWUM6T0KIoQhzHdduwmGXpjebPyf6G
      JkRR5PM74gw4ahp9As3P5JvRNW3D/75K4KeVoYGazWa4vLzE0dERtre3G3wk+PxvqjcIAhix
      xXLVYEqLMzQ8+Hj1XVQiYZcLhZyxtXwlwoVbb+kWSfoYY1oLYo+OfhtPvv9rOD2+wP/4f53C
      lmMAwIdVhN+f3kU5nyE/mRWoLPAyH+BFVk+WfO/FBf7Xbx/i5/6n38VFFXljwDzPcXl5iaIo
      5jNr/WIm6Zm4IAojjJJhvUclqje42LJCHEaIw0Waj4s+zQ0xvDG5o0s7+kQirAmJNk+vaShC
      6unTpzg9PW0utF5fX2/SHlZxX7j7IMv2DVx5W11C43ouBUZTImTB5CYVPn5yDKXVIzx5vzU8
      6OZMAPiRcBO/dBAiO30Xd9ZH+On3/xQiE+LfPznDWgEABqM4wH/6k19DVB+eg8zW09X/zFsb
      OLrMcXyZo7B1m4eHh0t4qDgEoXsLgUNbd8U6gamTN+kANVqjkHVpOEW8Ac0aSFPMV2i56yIZ
      TfquEhlNWPb29nA5nTb+Kb/cjpt8l48theRG/E1lIIkxu1JAJHTh5Iu9tDa0RD5tXDT65Ld+
      CE//2P+An3mW4I9+fRd3N34IH0Yxfuw3/zv87jDBNyZr+Pd+7AH+uYdriMP38d//5ufICos/
      /o09/MF7EX5kO8IPvpPhF//JX0R8+DP4+T+0h1evXmE2myGKIuR5jg8//LBpj8YqDqNm1dgY
      OjWi/n+W561LOTRXU0JVlUiL+QIO/T+o77gwpt7PEnqUnnn27JlNkuW8fznoGuPxMnwRjBha
      Yw4XExhjEMcxvv/oUzx48ADGohVka1qQv9MGy8Ji5ssH9+BDdUwGo6V4R8ND/i77zduSjAos
      mFmzNpqbI9vooo/LxZI4BmWKizTHZVqgyFKcnJxgMplgc3sXx6dnGEQGh69fY7w/xn/2f/95
      nF2e4mee/AB+9kf38d2dP9JMWOzt7WFvb29pfGUMySErMuTlarfSdMEgihGFkcpHxhgE4/EY
      o9HI63PRx1zjyRQDLWiT2tnn2xljUJQl4ihamrKSgaYcUC1eqdtfdbiUvos+ufxr2W+X5pIM
      wd0gWV77ViOkK17gOHC8NdyofGFiwIRIovoUjZ2dnfo0jqrA2jAGrMWj8SP82d/6s/jouz+O
      vSc/hp8r/meMwxLvvfce1tbW8O6772Jra6sl3NxCpVU2T2+WcLMzRNbaFi9p9AmMqTc7hFGk
      ruD5zDZ1StPAWl49oG8CJ+13dn6G4WgEYPkcTk2bynYlQxaenHQfk7bqgj6bJYWQZqq6xsul
      BDjuUnlwHF1C52tTO85dq58UGY39xsYGBoNBQ8cwDBGtR/jl//eXcZQeITJDfOviR/Erb/3H
      mP3+fxtRFGF/fx+DwWApBZt7BL/x6NdQPv8dFd+bBhpLF32aY1HW19ZwMbusj42APjCaX8kJ
      Rs+0hR/NjaGy9O/k+Bgbm5uNJehiKo6LlOyiLOr4oYdv7nPRpHujuSEAmjuKJZ5S2/PfNddG
      i5/4GPusglY/ty6++rhlHw6H6sl71lqcV+eYFfX5UYM4RwqD5w//ZVTJBjSQ/GKtxR99/6fU
      MZw/dNLM2vooHgsLWLRzvDxtA276NCMThiEGcVInMjHty7M+ZeXEuL4VTi4AMmjkZr8sS7zz
      zrsITICjo6PmPWcK6b9p2pDKl7bqxfwcXAyuxTLyb40BOU6ueiRTu9xQ3ga3ul30kcIl+8vr
      pW/o0nHa9UWTEoPBALeHt/Fjd38MVTFBHB3g7iTAT36466WPbJN7DhwPOmfKB0kUYxAlGMQJ
      wsC/0SfoQZ/WQlgcxZilM6ebooFmHXgjkqk0Hx6ot+rVg5zg9evXwH7/BSW5G22Wp81Rj7LD
      XeBzYXgZaRm6yvOyvA2fULnqku4FCYXLVdRcKqCtlWUZXpbGt6hKFEWBP/fNP4fs1e/i37j8
      m/jBf+mHUG0knfs0XPjJtpIoQVZkrdMHOaR5hmEymFuDsGFyxtqgyM2Y7i2sjQBYW696JuIk
      CBei8pnLr3VpN/mOiDgajlDMD+DldfuS3OQMTVXproLsg2twWs+M/k4ys1Y/b4e+7fLduVZc
      VWh9bbv6qik67iLxeuMwgoFBkef4L/7IX0MAoDI1C3Vpbm2fNf+9iRGNwTAeYJZnqKx7HQUA
      DMzSHRWS3+QeDllHkw16fnGBi+kl4mj5pBQfIWSntI5pzK7VS2X2bt2CtTrTunBruy56fo1L
      KFx1uoRDxjrcTfNpdI5HV2Cttdv1nc/N0ejD+yPLaPSy1tbnac4tUGUtAtMtrC7Xj/+UZckd
      p9vqjalPL4nEaYRaf1ehTwDUByKdnJ3Wwa/Hmms7lfp0TmMkV13WWhy+PoQxyzu6qLxmbW4C
      VC1ql8tIXOj3PhrbNyYu4KneXX2X77l/34WT9r3PagPt9HRXHa72fHGCQT2HH4cRhnGCUVwf
      xchPJHR5Hdp7F30ia+vdQsMkQb1DSl90knthNQ2idsQRiMilfHqWlwUma5PWNz4NLiXdB1oQ
      1AmimMt6cXx8710a2oeX9NW1rZnat3x8uvDxuVGuNowxSzyhuiPGLB2CzNvkmpn305h67y6v
      i9wamoBx4efqr+x3cHZ+Vp8VY/0SqSFOoOX80OB0WQj+XRAEmE6nmIzHsJVusl0d5pBEiWql
      rgarfetry5VO3aWltRkWCXws5aSAlhvko4+sV/aPfyNdJonnUX6E73zv19V2uDKUilBrl/jO
      JdBXgYAI3JqSrEpnIpckFJ8K5SBdFbkXWIIxBpW1+OL5F1hbW3cKFa+bnsm2ghsanKuAdO1c
      7oQE0mwauHx3l1BoWr01PsyiSPpInOTfWn+0OIz+7SQ7+Ob7P+F1/TRXpiuovqoLLOkT0CkM
      PPOwsrZ1+4sLuOTLPBb5T3N5lrUJMBqNcHFxoZo4TkCOs0s4bwb6Bc7UvkwX0fxx+p3XycdI
      q5e37XOztO+0si76aGVceHD85XckZFVVwQSx6vdL+vFnmqLsQ+dV6dOkQ/OU3Dis83EoM0+a
      1jcBVVUBtt6ql2VZfQdZGLYWYmg1jwsC/1vCVbVEG9rEWaXuPqa6Tz1SQHya2sc41wUZM8i6
      pVXhguADzvSUin8VnK9Cn0bspRmKWQada7UR0OfVNZPmaodDURQYJAnOz87w8UcfIc1SpHmG
      p8+e4fjkBFmeN7uLXNrJhZsLVpER6p8WtMnfuXX01beKP+uqz1eHS4O7XBIffQD/TfUua68F
      x9Jyc4vf12109XUV+rSuSJJSLc9gpMp9/pkMiLSOu74nTfDOO+8AAD57/Bk2N7ewtb2Fsixx
      fHyEza2teiXULs9auIJDbZAI4vm8trVzXS9nfcS35HoRvhIHV4xzHdA0usYYxiyfeu2qz8Xo
      PvpIXHy+Px8Xl/tLP/n+CgIZyPcBycd96NNa9bJ2fvBpltV5IGJRrMvUcuS56ZOawPdtlmXN
      iRBvP3y7+c6iHsizszPs7u6iQrWa+nZAYILOnJKlbzwazuci3ATIwJY/ky6Kjz5URuZbXRf6
      9pfjL2MAV6zUF1ahT4vDm0J1EacvKU2gNGkuX5UTTg46pUQbY1qLK0SkMAwxHo3w+ePH2N7a
      RjzfdcQ7I9vs0v7zUk4zKzWt1FJ93JyrgqtPXW36rCDH3zXVyMsTfciycP/cp2V9/XEF0vwZ
      3+nWlWh5Xfos2bo4jjGZTJCIBQheqTSxfFC4pHW5KFybRY4UDJ5aHQQB3n7nHTx98uRKmpab
      6OafwM1XT9dMiev3qwBXDhoNjDHzc3d0V0h7pvneGs4abV33MGtp27wOGTN1tUs0d7loN02f
      VjKcBG5aCboCIM3vl4hr77VzRZdmHSyQZxn29/ed5aj+8aA+St1g+dQ4CwuDet0hCAxgF4QK
      w3DpDKDraPm+1kl77/OdAcxvdUfr5DrJ5LwdfpezhqNmabjgaDiSdZDT1qvEQpw+vF3pSr8J
      +rQ4Tkqd5jdxBDVp14A640O0z8KHtRbra+uYzWatjktGMcYgmP+jv/kBvME8TTYMgmaan1sb
      qe2uo81d33bVqWljoO3OaO+1sehDH0A/xcIlwPx9mqatW2jonQxktf5yGkohk8/eBH2adQDe
      gEvieUdoOqyP9Pm0gSZInGDSHw2CACcnJ837PuDTElK4bxp8sy0uF0crC7jHRWpq+n0V+vD6
      OWjMSMA1Nz/BY1X4KunTcrzprEg6LZoa1rTNKszXVd4VjLn8UTptQJpc/q0PZHt8NsRVxyr1
      a99q4+DTjD7ossiynVXq8/VBw98Yg+Fw2ATJvPzyPg3/FLpsy1XXVemjCVHAd+eXVYW8LBpB
      4EGJZv5cDKrBqu/ksyiKEIYhLi8vW4e8ujrmaoeDjA000II4F2gHWfHxcwWzfdwh7Xc+oyPf
      ub7t246Gp+uZMaaZupZ1ceHqYv43TR8++UEQVVU1vzJ+HnlXFfIqb2Zl+lyw5vMT6b1mPVxI
      y/IUYH3xxRf1vtTbt1t3BFxF+/O4wNcfKttHOxJTuFweXpfLt+ffd41ZURTq7BnHW/anD31c
      7a0CTeBqbbOY2Ec7f9n0CaIwbBaCeFDIszf7+qj0HX/m+pZLY1cbYRji9evXGI/H2N7eRlEU
      rQNz+1gXF+GlJXHBVQIt7od3EcjnhriYsc8GGVmnthnd903fstpYVnaRdu1L9OPxp1av1g9X
      PauAtRbB48ePUZYlzs7OcHFx0ZwfSZH2xcVFc70OfWSMwdHREQ4PD50zBy7hcQXXQRAgjmMM
      h8Pm2O5wngwXBEFzqKu2S6xLs/B/0nRLPHx7YlcdXOniaD6/xI2Pka+PnGlcrg/vj6seXwq2
      9tOFi+r6maBzN8VXTZ/o1atXGI1GOD8/RxzHODk5QRAErQORBoMBHj9+jK2tLZyeniIMQ2RZ
      hs3NTQD6DAE913xQeqYlP11cXKAsS4xGIxhTzzF//PHHmEwm2NnZadUtO9MnFuhauZQ4dbku
      GmjujOynxlCcoJKhJN6+eqXJ10DmDGn+Nv9Wpk9I0ISiq98afNn0iSaTCS4uLgAA0+kUaZpi
      NBphMpngO9/5Dn7gB34An376Kb7xjW8gTVMURYGjoyOsr6/j6OgI9+7dWzpNmjfkQ6goiuae
      2TzPcXZ21pxFc3p6irIskec53n777cYiyMuZu9qRzCUHS5uZoAGSgt3VBv/bpTGlJfXV2YeR
      VwHeJi0oaXSjv/nMjiwnx/yq+H3V9IkmkwniOMb6+jrSNMXZ2RmCoL6W9IMPPkCe57h37x4e
      PXqE0WiEsiwxHo8xHo8bJAiRLMuQpmmdz18Uze+kNaytj6irqvriBHJ1hsMhRqMRXr16hfff
      fx9lWS5ttq6qSp1nlgOnvfeB9o1caezazabVyYnE6+Ua3gddQai0BBJnh3DQEgAAHBxJREFU
      1zea69CHcW5CAN8UfaRS6YNHM74vX760dAM7VUK3e0ynU0ynUwRBgDzPkaZpa3WvKIrGlMZx
      jCiKGsYejUagU6f5ZhvNQhhjcHJygrOzM9y/fx9ZluH8/LxxA0ajkXe2o6vjVI8r35wzgtSK
      msb2MafPf5fvVsFZy7DV4itfOoKmLVcRSg3nPu4nL+Oq46uiT/TixYvm8FTS3EEQIEkSHB4e
      Ynd3F2VZYn9/HxsbG/URivP4wLcQpc0eyBkRcp2qqsKjR4/wzW9+s8X0dDkGN9dap7qkXvrO
      MkDlOEpzK+vm2kfzvSUBrLVeV8MFkiF42jLVyd9LV0IyhmtO3TX70rXbTvvG1T96VlYVgsC0
      zp6l918VfaLt7W2Mx+PWdkNi1CiKcHl5iYcPH2IwGLSQI0vBG6L3mmaSiNAN8LPZDI8fP8bd
      u3frC9vmTM9dq77aqQtcviN/59MamrZzab6rCKosq+GkCVcQBEuaXLo5fVZgNRw1xunznQZR
      x5rSV0GfiFwXXlFVVc3F1FtbW8jzvD46BQut7WtMM0taJwHge9/7Hu7du4e9vT1UVVXfJaX4
      ni4Canj4pv6kGeXPXSbWpZFk33ymndfTNVb8mSvQo/Jypk0Gjb42ZZ2ae9oFfSybrMs1/vTz
      uvQpqwqwFYA6IdKFo7UWEV2cLDsfx/VO/svLy9ZHWqClDajmj8rGAWAymYBiEFcyFfd/VyGK
      xIG/l64a/e4aeOnSSXeEE0AKJMfJhS9vQ5v5cDGMxEkbAxfDS+Ggny6hc/VBK+vDVdJHw+86
      9MnyrDk6na5kctGniSy1rWjGGEwmk15uiWswpcaU35ycnCCKIkwmk9ZzbTB8g61ptq7VRVmv
      q7wGfJy0XCn+rWalgPZqO++D3KZILo7EWet7l6vi6xOAljslx8nlU3cpQ1ebN00fOhHcsm8r
      WyEIYid9mk3xmoamzrkuF+DPiFjye26iuEtAdW9tbdVX8CiDJBmIt8cHSiMEP3PGpTUk/i7Q
      BFfrp6zHx4waXrwu15SmHFOOj2u+nJfjAuVKcXZZMVmXRh/Zb+micNxcExtXpU9WZEv746h7
      Lvq0zgXiyElLIBmcV8Z39WtWhP+TGubk5ASbm5utNn0bKThjS/POf9emXeWA9QGtrOyPC1y4
      0d/yHx9jOdY8o9SFj3zHn9OYy/lzOT4uIeJ/cxrI8XAJpxxH/o2Eq9JH+8LCqld/EW7q5LqU
      VOpQn/QDruUlA2iaIM9znJ+fYzKZNCm1tLnCd0qB1GAuTSYJJQnkq58TUWoO3i8NeNuapsuL
      ArnnDrM4jBA7NLFcD/ClSUh8tb7xeni/XIzom6WRbZDCe9P06XOSIYem7SdPntjhcNhiWs3l
      0KBPWc1NsdY21/DMZjM8e/YM0+kUo9EI9+/fB+FDHSVhcA0QEU8KhEvDSNy08l05KX37rmk+
      oL7phN+JK6G+6bx9vafM/uyikXQ/fTNp9JMvvHEGW2USwhev8DZvij7WWkyzmfNkf4N6+2sU
      RnXGM6szktKnaREXcfsOiKyDGLaqKiRJgocPH8LaOk3i6dOnyLIMa2truHPnTpMNCqCxDFLr
      cTeCcHMl6HH8XdoZcCf4aX3yjY9rDLpA81klfVxWWH6/Cp0ItMmOrjokTprQyvplv2RfXfTh
      Z9ECuvuzeGdRVCXKqsQgHiDkiv7p06d2MBgsaVeX+dc0g4a4HBSfdqbZJfJzq6rC+fk5aJV6
      e3sbe3t7TafJD6V/kkg+803AfWMYMx9Cjnd9W6Yxht1m3l7DpNpN840FjGmqs4vKqNGmfFbm
      9Xy1A+IwQhLFS/3i+LvGmwOnkYuR5bRrVyDM23WlUnRZxD70kf2hZ6/Oc/wn/8d38e/8obfw
      L763hTTPVD9fwyEK6ssgqd5IFpQfaX/7tE1fjSOFijQ7rRCvr69jY2MDRVHg5OQEH330EcIw
      xO7uLrbmxyOSQNDuMJ/WI2Ynv5SezQr/TfLXgrZMXQkkbbpcL9lnbT1BcyF9sYwLXPVIQdOs
      VR/6zCtBZYHQLPistBazokRaVJhmabPxRsNP9qGyVZtfnz592sQAPgRdlXNtzs/28fmlfUwp
      CQNPx82yDIeHhzg6OsJgMMCtW7eaKVRgIUiae6a5I1VV4TKbrewe9IW+roem5SgGoGeaJejr
      P1fV4jwd+s5Hn1Xq5ni7XL4+wuX69h98eoInxzP8qW/WOwHPzTk+PZzhg+17mCQWhWOGh9cr
      24mCEEkc1xaeBECbSegjVT4zxqc8+yCp+ZykxcgyUF3T6RQHBwfNDNKtW7fAs1opXtBcAqqj
      rEpMs/T3hADIclEQIonipXJd064+YWn5zNYuCYWvXgLJHy6BkfGK/N7Vb15vZStU1qCsgCK9
      RB7l+DO/8Wfw/NGP4w/u/wv4hT/xwyiKfCUrRRAHEeIoWtwSST66dkIbhy4Xic/GdNWlIamZ
      eGttsxGGhGE4HOLBgwcAgLOzMzx//hxpmmJ7exu7u7tN8CzjBd6ezErswlHr702AVmcTfzCG
      kArFRwutjPTZr0ufLivr6yf3ILR3RVkiLeoUnSSMkJYlnufPcTA7wGj37+Kz4T9EVv4yUDCX
      yWAeg3UrZ+rH0tGIcuBcGt/lh0o/UGtUxgqcMNo3vF7S7DxwXltbw9raGqy1ODo6wqNHj1BV
      FW7duoXNzU1EUdQIAk2pWqudqvl7COZDQe4LoBPUp4GbqhTB0OiofdfHFe4KtKXl8SXrlVWF
      oiyaJDZr64Wsk5MTjDDCj9/7cXzr4Fv4qff+GOzMwtoKWZEijuOah8Kg2b8yHI+cQlDaChHQ
      ngVydVBDXkvYkoPiC5jle1+GYAtxZS+r5iJVVYWXL182uUZ3797FeDxuC1JV4mI6vXag6oJV
      YwBelpK4tJx/rQ0+5l25Q7xNWcZFH5ffL0HuO/AFwBpvlFWJWd6emAiDAJEJ8cknn+DuvbtI
      Rglev3iNy8tLrK+v4/nz59jZ2cHl5WWjMAabt7CztYkkLHRFZ2scl3KBXEwoV+58hJHui8tv
      5B2Xq5sqznO/VbMktIWSC8OdO3dw9+5dZFmGZ8+e4fLyEpPJBHfv3kWSJAiqAJNxgKIsUBR5
      nY36huIBH/jGhH4H+mWJUjmtTle7LgZ1feMCibNkcvrbR18+ndngAtOcgn1+do6zZ2eIkxjP
      1p7hO89y/ODaj2I/TmHtBay1uHv/Lfz8rzzCxvAA/9WffA9Zkbfqa8bJVgsL4EJI9U9FRS4t
      rwnAUuc8PzVwbYnTCM6Fgcqcn5/j+fPnyPMc29vb2NnbWwi5rVAUOfKigK1sfYr0NQSirwWg
      soQjsAiC+/izErroI9vrGv9V3CItRtFo5LIClbXIi7w9HqaOiYqsVlJxHONXn/8qfunbvwRz
      /JM4ff4T+I9+4l381De3mo38v/MywyAK8MN3J8jLohECOU5L6wDcf5eaWwuotCVyl5T7LIX2
      3gUui6UJRJ7njcUKggCTyQQffPBBEy988vFHAIC9W/vY3t5GmIQYxPXKYVEUyJWB+zKgTwwG
      6Kcqa9CHRi46rKoE+gigy4MIzOJybAllXluHMAzxtx//bRgAm0GMEwD/+7de4Kd/3y7yPEdV
      VfgDDzeQFjku0qkX16UrkjjCLmnvO+BaB13CBbRzSFzt+kw7N+fa6ib3T8MwxM7ODra3t1GW
      JV69eoXvffe7iKIId+7cwWg8roUhGdRWoSyufPrxVaCsKgSmAuamvyTNOu96xCybhL7WQqOR
      jz40keDKC7oOfXw4kmvF8fg5s4cfefHb+HvpC/znAG6vJw19mwXScnF6oAsijhQVllqGP5e+
      t28Q5XNgOYuTg2vQ+TvfAGvWQBM+mgmiQQ3DEHfv3sWdO3cW8cKTJ5hMJti/fRtxnCCapyXk
      RY6iLLyZqlcB3l9rLSpUKEWynK0LNAKsjQOfJNDoKMeiS0FJkMzvomNX0NzH1eJtAgsFmWUZ
      /vA3fg5rj7+FjTzHe3tj/Ic//naTTdBM6thu67UUA0ht7EJWMrU0qS4/0RfsafWR1tEWbXj9
      ZVVhNs8IbIRUtB0EAYbxYnM/b9cY0xwLSe2enZ3hiy++QFlV2NrawvbOTsN4VVWhKOt4wTeF
      29d9qCoLwD3GVJ+1FoEJEAQGgJnfchm1lJP8VuuvZGJXnKZpaulmuurqihNcnoWmaKuqPqaH
      IAgCDEOLPM9QJhsYJ+2j2Y0xuExnS3HcEh/LlWDe+a4Alv/tGiANpBC4CNHVNv+9shYXs0tv
      H8K5AHA8NB+aB8/W1lOmR0dHODg4QBCG2N3bw8bGRlNPPYtUoCgLZx9cYK1tNLsrdmqVte2Z
      llEyQBjo1oCDj0Y+Tcy/dX2jMaz8zsUzrrYrW6GsqiYhsCzL5oxaid9wOEQcx0s4VlWFylqk
      83wva+sZJa4Z1f0ArkHTBtA3iH20X18mkfhIzVPZeU64QgwpALyvXcJMgkBMl6YpXr16hZPT
      U4xGI+zduoXhcFjfRTb3O/MiX9o11ac/Wvtd343iQedeWV9M1afNXkLsseQSD62sVpdGH3pP
      aS5ktV39sNbO46nFohptmAdYNqjPt9ZABkbaIHeZuuuC1EwuzSNB2xPrwp2OaSSrkCQJ3nrr
      Ldy3FhcXF3j58iWmsxk2t7aws7ODJE4QR/HcRSpaU3oS76uARa3ArLUYOphfjoGLPr4xWpVG
      WmzgsgBdm2t89OHMLvlWq9MY05xHZK1FVbT7FfGBcWkmlwmUZTXoS+y+9Wnf1fj0D0r7aH7Z
      Z0qj4CkYk8kEX/va11BVFY6OjvD548dNCsb6xgYGSYIkTupDfufBc1/L6MOb8PO5qbyMqy6t
      333bd9XX5xsfw/Lnq9CH/665yU15sS6sLoTJ4Eb6equ4Sl0gB2MVgeGdK8qiM7MzMAGGcbLE
      PByHPlOLfDwoZZvqzPO8ScFIBgPs375du0imDnRdLpJGPA0HPva0uUPzxTncBH14+6t+11dh
      cv9exmZkyfrcGuOKTYB6LzYJgTFmIQCyc64KOUJdUtoHfKbWZ645LjQ/P83TpYHm9UdBiGFS
      CzsNpqt9X7yhgZaPdHl5iS+++ALT6RTrGxvY399HEIYwpp61KvJ6fcHa+W0qcAf9XPNbawFb
      xyeDOK7vC3aM5SrWWoPr0oc/91kPyUs3SR8t1mra5RtiZCfob99qI/cx+2oHDfpu1tA0NrVf
      lHSsovK9Qc00bAaF+5r0bJrN5nhQX/iAoXX3sDEGfNeXQS0IcRS3tnhaWx//8sUXX9QHDd+5
      g83NzeZdWdX3IND6ghwDOf1bj0ONY2iCRqhdZl8mqF0FpHZ2leFtu6aH+7hRGn2oL9IrcbXv
      cuX5d40AtB6a5VMWfIHldazAqhpGYxAtEJIDxPcGyLp52fPZ5VK9XAlI9xBYLO7R35THQ0LA
      85GstXj27BmOj48RxTHu3L2L8XjUvKvjhaK104kz3xyzuQAYREGIOIzUxUVJs6vEHz7XzEcf
      /l4TiqvSR7OGnD4kNPyZz3VyCgBvkBDsGiDt+WAwQJq6fXNN6l2aTBLS55L5giuJN8fhMp2h
      spX6TtbhEzwC2tgyTAaI51N2NJa06nxxeYHBYIjbd25jOFzksFO8UO95BoB234ypN/UMoth7
      m2eX0mpwdYwZ/13m8PjoA+iH9fra6hsTqdrc6IfnaoJH0MoFcjFp35wNXgcfgMFggDxfng6U
      SFI9XLJd7Uh8ZbsaLDGnYqaDwKAq3f7tqm5EZSvA1uNAJ1+TEMRxjHfeeQdVVWE2mzW72saT
      Cfb39xEnCaIwhE1QrzrnRSOcvP6sLDDqCA5d9OHvNPBZDhd9ePk+6duudxp9pEDI/pEFWJy4
      YZtbUDVQT4a7jktD39N3RVE0tz8GQYDpdNpKs6CylMchOyh9OleschWQMQSAlbZJcvDhUlVV
      a0meCwO5R6PRCO+9915zJMzTJ09QFAXWNjawt7eHOIoRR8k8ZbteeabTEK6Tl6T50hy4BuV/
      0++aRbgp0OjTx2UuqrKV/pyEQOy4Ycg8ffrU0lVGvBIuyV2MRn6WzK3h74F61mIymTR3h9E7
      l3/pMrN98VoFaJC13HEt0JLg0pT07SgZ1trcLs9Y0O98FomUwsnJCV6+fAkYYHtnB1tb2wgC
      A2uBqqrjhbzIMYhiRKFOZF+bsn/ae62MzxV11XEdcLkwHD8S1KIsW8dOxkGIZH4W0JKVkQdj
      yYHRAhYXYlrAyL+jcuPxGGEYNleiah2Rv2vtX2eAXUTPywJpni0R1ecG9BHGYTxoBKDLreCL
      bVR3nud4/fo1jo6OEMUxdvf2sLa2Np/csrXdsu3Dg6k+ThMZw/CxkC5HV9++Cvpo7ct+FWXZ
      OiuU1ks0aE2D+kyaxpQuV0VOu2knjdEleicnJ6pPJzvtavOq4BK0oiwxy1Mv0/vAxRBkAXz5
      9K76aCaJYDab4dXBAc5OTzGeTLC7t4u1yQSBWSTvNRv/HfSSm+25kPB+EL78p8YXWr/fBH04
      yClsY0yTE8aBjkDR8GxsphaAyMZcPjpVxqcDXUEslZ/NZkiSBOvr68iyrLkTWGtbtncTvqYc
      XMK9TjNul/G11ydAtNYC5mp+srW2uY2TYobhcIiHDx7AWovz83O8evkKT2afN0dI0u0+RBMS
      hrIsmxMypLaXfSYgBvPlTWn0cUFZlSjmfZl/jDhavsDCRR/eJleoze8KflpYRzhHgH4iA0dE
      9Z3mz+XZMi7/WEPg7OwMm5ubzTTpaDRqcr55m3KO+yYDLQCtPhi4N5LQ39qcuzZGrfUBa2EC
      922NXUA04ouOYRhibW0N6+vrsHZxJAzd6rm5udk6QpKgL426ylCfXRucJFhrkRU5KlE2Ruz4
      ogbt/CLuadDf1vrvAlCVugyCqTL6iP8tK5Tl5Td9ft/Y2MDZ2VljgpMkaU2Zck3mI9yq7orL
      HwaAi9m0Nd2o+e1Sk7viJSpHMYAWY8mxk/3reh5FUZOPBKDZ4nl8fNzsdptMJq333DJobfSN
      bbqsycI1qZDlOYqqbJUbRAnCYPmKKU4f7pprY1eUZX07jG1fj0Qg7wnjEAHtDcquTlKHfAMh
      Ee3jVllbJ5TRrFCWZdjY2GjhdH5+3rhHEidJqL4uBjebkhEDYyisbPVNDqDrewAYJoPGmpCW
      lMzuGldXvOPqF02L8pXn27dv486dO8jzHM+fP8fnn3+O4XCI+/fvI0mS1s42yq2XfZN7tLXf
      mzFTGLSNr1nS/ABatzjKMeiiZVVVyMp5YiHgPOjMpxwjXwMawfpoBNe3EiEa5Mlk0pzrU1UV
      Li4u6hmOeZnJZILT09PGD+7TbpfQupirYXLr7o8E+S40QXOwrWvMfC6nbzONrw7S7Hz/QhRF
      ePjwIYA6Oe+zzz5DnufY3Nxs7mam7abcMtA4cO2uKRl61uXaBcYgiaKlQ698TMv7qdFBXorh
      Epi8LBCHkU4HmQrh263vcnX4M0178e+lqYyiCBsbG7DWYjqdwpj6FOjJZNJscwPqAT47O1Mv
      59bcGBeOElcNTzpvXusLWTmfSzaIEgTGeI807HIreTmOa5dgaPTQ8pFOT0/x/PlzAMCtW7ew
      s7PTtEFCwC0D0c6Vc6QpIEnvylZLKeu+HW0u+tA72vPrw4PKj5NhS4jp/KCWAPAPZCUaAj6k
      fYMipXttbQ1JkqgDy4Gsg0yrWMX313CVbc6ytCUAvH3ZFwmBMRgNRo0DJdug36+bmUl1u977
      3AouDGVZ4uDgAIeHh4jjGHfu3Gnd2smFgbfZNf4aDxRlgVk+v5PaWgyTAQLjvmLWRR+ig08A
      +N+BMRjGg5YANHhJC+AjsEvyXd/JmMClNQeDQeucfx9YWx92dXFxobpVXd/yQQrDsEVYCtSI
      +V1BquukBGMM4ijCIFosumjfy+eyHnqvEbOLPtJlkTTjGl2egpGmKV68eIHLy0uMx2PcuXMH
      tFmKxwt8RqpvoltRFkjn20PJxYyjqOWaSPpomaX89zTPUFZlcxKIBGMMhvMFsJoXw2ZvMMHS
      2nnXkrMcTJcLogmHS+slib5Kp4ExBnEcY3NzE9PpFGmaNri4iM6/lfWQv11XUmvwwATNLJDG
      aC6XyxiDOIyXyskyfVwZzcUDui+gk0LicxHJkpIgDAYDvP32242l/fzzz1EUBba2tnDr1q3W
      SRlabpDEnT8vJN6m9s1pdkaWb25+qV/UGa/zpDbi0SSKkRVYmlkinKIgRGCC5nS4OIxaK8LG
      GD0ZzgUul0BjfO0bbWBGo1HL1++LhzF1SkWSJJhOp80sEQ+4u/xsYwySJGkS9mazGaIwQjw/
      imOWp+o9Xj73IvAwNcehy493uUouZtaecaUgy/AxIs1uzPL6QlmWOD4+bq6o2t/fx8bGRjP1
      yleduXAT3kVZoqjcB4kVVYlEVYzLgizHzlqLJIoRVgHKeQYoTzo0xiAllwu1FQqDsHVTZMQr
      pgHvo6Go7BLagsGk28Pf06rmVXx4qj+OY0RRhOl0itlstlTG1w9rbXNkOoDm2laaRRklQ0yz
      FOVcw2gM1cIHy4zWBzS3hzOT7HNfIXcJBB8TmZkrp1SjKMLOzg52d3eRZRlevXqFZ8+eYTwe
      Y39/H8PhsAn2uTAQ0Pk+LpAKw2W9y6pCGLSZm/pSM3WIrMhbV88GJkAF1rYxyIqFQERhtLgm
      VfrrTcMsTXlRT9skc2SoHi5EfNDJfJL2vSrzczCmXkWuqgpZlnkZnr/LsgxJkjQWaDAYIEmS
      JjUjTVMMkwTTNEUchgiTCFVV1trGLl/+LMfG9c436+HS1i5XTNsuKf1yesb9dq1O+p3iIj4l
      SvsX7t+/j3v37uHi4gJffPEFZrNZ61YeqpcHzlpfk7lLY1jfW4uPop9FVSLBcsqEHA+iSZ0d
      G6KoilZlPF5I83xxRZJkUvrpm63oExTLskRkEoCbAmNMc9v8bDbzbq0j4CeK8TIU+CVJUlsV
      u3hngvooQiJYVdV7eoMg8Go6F7iC3q5vuHXtE1zz91rqOrcEfFWZMzRfX5hMJphMJrC2TsH4
      9NNPYa1tUjCa1ekgAPL6NAYOdcp57bZGQYgoDJGJM1cl7WZ5hvGgPWPJgS4WBwzCIKwDZM+Y
      GgP3sSjUeR8jF0WBLMswGo2WvpFmViPM9vb2taYDXWCtbQJkLpD853g87u1+0ayTNO9AW+hX
      2TnHLSWvSy4oyffSB6bn9LfmRvUto+HJXQ7u6/NVZ1JoRVHgxYsXOD09xWAwaC4iqQBYW6Eo
      SqTs5A4OoQkQBgEyz62P1lqsDcdL48hxJFoUVenMC+KwdCqEjyE4ocuyxHQ6xWg0ahaGeMqu
      xnT0nMzx5ubmGxEAAnJj5By2+f+Ku3YchkEY+liYmqEMzf1vxobY2EBKKB0aR+AAgS59M8Hm
      4y9yLETh+4+AKrXIxWpZu7v9a4F/V1MaIxaZzoGfZ6sYnfNQG9eKM04f/BCCvKWt9x7GGIQQ
      8FgWvNa1eHugH4WdtIl+Z49yAcitWO7WbXHHHiMS3sesfQitdZrJwtDCSbtKKS/mtKZ1L4R/
      uIT/Bgn9iLLoYSTBwJFfzpG5uaVoBcR3/MzymhfyEJxzsNbiqRSUUl/fAxR0b1N9F3hhC19H
      rRNMMR6pSFZ8AL+3pTY55f+CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Negative' width='192'>
      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
      ErokAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Positive' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      kbbWzMHtgv8LUXhBBuhfrgoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
